{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kernel Glossary","text":""},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    workflows/  # Kernel release model and upstreaming process.\n    debugging/  # General debugging tools\n    ...\n</code></pre>"},{"location":"#policy","title":"Policy","text":"<ol> <li>File names are separated with dash (-), unless it's meant for </li> <li> <p>Markdown files that are not for functional purposes of Mkdocs itself (e.g. index.md) must be tagged (in the YAML front matter) according to directory they reside:</p> <ul> <li><code>workflows/</code>: <code>tooling</code> for a specific command line tool, or <code>workflows</code> for processes.</li> <li><code>debugging/</code>: <code>debugging</code></li> <li><code>concurrency/</code>: <code>concurrency</code></li> <li><code>drivers/</code>: <code>drivers</code></li> </ul> <p>This location-based tagging is mandatory. They could optionally have more tags.</p> </li> </ol>"},{"location":"TAGS/","title":"Tags","text":""},{"location":"TAGS/#tag:acpi","title":"acpi","text":"<ul> <li>            ACPI C-States          </li> <li>            ACPI P-States          </li> <li>            ACPI S-States          </li> </ul>"},{"location":"TAGS/#tag:barriers","title":"barriers","text":"<ul> <li>            CPU barriers          </li> </ul>"},{"location":"TAGS/#tag:bus","title":"bus","text":"<ul> <li>            I2C          </li> <li>            PCIe          </li> <li>            Platform          </li> <li>            SPI          </li> <li>            USB          </li> </ul>"},{"location":"TAGS/#tag:concurrency","title":"concurrency","text":"<ul> <li>            CPU barriers          </li> <li>            Compiler barriers          </li> <li>            IRQ          </li> <li>            Memory model          </li> <li>            Overview          </li> <li>            Processes          </li> <li>            RCU          </li> <li>            System call          </li> <li>            Threaded IRQ          </li> <li>            Timer and timekeeping          </li> <li>            Workqueue          </li> <li>            dl_sched          </li> <li>            fair_sched          </li> <li>            hrtimer          </li> <li>            mutex          </li> <li>            preemption          </li> <li>            rt_sched          </li> <li>            semaphore          </li> <li>            softirq          </li> <li>            spinlock          </li> <li>            strace          </li> <li>            tasklet          </li> <li>            vDSO          </li> </ul>"},{"location":"TAGS/#tag:context","title":"context","text":"<ul> <li>            IRQ          </li> <li>            Processes          </li> <li>            softirq          </li> </ul>"},{"location":"TAGS/#tag:debugging","title":"debugging","text":"<ul> <li>            Analyze call traces          </li> <li>            Debugging overview          </li> <li>            Dynamic debug          </li> <li>            Event sources          </li> <li>            KASAN          </li> <li>            KCSAN          </li> <li>            KFENCE          </li> <li>            KMEMLEAD          </li> <li>            Kprobes          </li> <li>            Lockdep          </li> <li>            Overview          </li> <li>            SPARSE          </li> <li>            Tracepoints          </li> <li>            Tracing overview          </li> <li>            UBSAN          </li> <li>            apitrace          </li> <li>            bpftrace          </li> <li>            coccinelle          </li> <li>            debugfs          </li> <li>            decode_stacktrace.sh          </li> <li>            drgn          </li> <li>            ftrace (trace-cmd)          </li> <li>            ftrace (tracefs)          </li> <li>            kdump          </li> <li>            kgdb          </li> <li>            pstore          </li> <li>            smatch          </li> </ul>"},{"location":"TAGS/#tag:display-interface","title":"display-interface","text":"<ul> <li>            DisplayPort          </li> <li>            HDMI          </li> <li>            LVDS          </li> <li>            RGB          </li> <li>            VGA          </li> </ul>"},{"location":"TAGS/#tag:drivers","title":"drivers","text":"<ul> <li>            ACPI          </li> <li>            Clocks          </li> <li>            DMA          </li> <li>            DT schema          </li> <li>            Device tree          </li> <li>            Driver model          </li> <li>            GPIO          </li> <li>            I2C          </li> <li>            Interrupts          </li> <li>            Kernel modules          </li> <li>            PCIe          </li> <li>            Platform          </li> <li>            SPI          </li> <li>            USB          </li> <li>            device_link          </li> <li>            firmware          </li> <li>            pinctrl          </li> <li>            regmap          </li> <li>            udev          </li> </ul>"},{"location":"TAGS/#tag:git","title":"git","text":"<ul> <li>            git basics          </li> <li>            git bisect          </li> <li>            git cherry-pick          </li> <li>            git interrogators          </li> <li>            git rebase          </li> <li>            git rebase (interactive)          </li> <li>            git worktree          </li> </ul>"},{"location":"TAGS/#tag:graphics","title":"graphics","text":"<ul> <li>            Atomic KMS          </li> <li>            DP-MST          </li> <li>            DRI          </li> <li>            DRM-CI          </li> <li>            Display Pipeline          </li> <li>            DisplayPort          </li> <li>            EDID          </li> <li>            HDMI          </li> <li>            KMS          </li> <li>            KMS Bridges          </li> <li>            KUnit tests          </li> <li>            LVDS          </li> <li>            Mesa          </li> <li>            Mutter          </li> <li>            RGB          </li> <li>            Rendering Pipeline          </li> <li>            VGA          </li> <li>            Wayland protocol          </li> <li>            apitrace          </li> <li>            igt-gpu-toos          </li> <li>            libdrm          </li> <li>            libinput          </li> <li>            simpledrm          </li> <li>            vkms          </li> </ul>"},{"location":"TAGS/#tag:kms","title":"kms","text":"<ul> <li>            Atomic KMS          </li> <li>            Display Pipeline          </li> <li>            KMS          </li> <li>            KMS Bridges          </li> <li>            simpledrm          </li> <li>            vkms          </li> </ul>"},{"location":"TAGS/#tag:locking","title":"locking","text":"<ul> <li>            RCU          </li> <li>            mutex          </li> <li>            semaphore          </li> <li>            spinlock          </li> </ul>"},{"location":"TAGS/#tag:postmoterm","title":"postmoterm","text":"<ul> <li>            drgn          </li> <li>            kdump          </li> </ul>"},{"location":"TAGS/#tag:power-management","title":"power-management","text":"<ul> <li>            ACPI C-States          </li> <li>            ACPI P-States          </li> <li>            ACPI S-States          </li> <li>            Modern Standby (S0ix)          </li> <li>            OPP          </li> <li>            PM Domain (genpd)          </li> <li>            PM Frameworks          </li> <li>            PM QoS          </li> <li>            Runtime PM          </li> <li>            Standby          </li> <li>            Suspend-to-idle          </li> <li>            Suspend-to-ram          </li> <li>            System-wide suspend          </li> <li>            Thermal subsystem          </li> <li>            cpufreq          </li> <li>            cpuidle          </li> <li>            thermald          </li> </ul>"},{"location":"TAGS/#tag:sanitizers","title":"sanitizers","text":"<ul> <li>            KASAN          </li> <li>            KCSAN          </li> <li>            KFENCE          </li> <li>            KMEMLEAD          </li> <li>            Lockdep          </li> <li>            Overview          </li> <li>            UBSAN          </li> </ul>"},{"location":"TAGS/#tag:schedulers","title":"schedulers","text":"<ul> <li>            dl_sched          </li> <li>            fair_sched          </li> <li>            rt_sched          </li> </ul>"},{"location":"TAGS/#tag:static-analysis","title":"static-analysis","text":"<ul> <li>            SPARSE          </li> <li>            coccinelle          </li> </ul>"},{"location":"TAGS/#tag:system-calls","title":"system-calls","text":"<ul> <li>            System call          </li> <li>            strace          </li> <li>            vDSO          </li> </ul>"},{"location":"TAGS/#tag:testing","title":"testing","text":"<ul> <li>            DRM-CI          </li> <li>            KUnit tests          </li> <li>            igt-gpu-toos          </li> </ul>"},{"location":"TAGS/#tag:time","title":"time","text":"<ul> <li>            Timer and timekeeping          </li> <li>            hrtimer          </li> </ul>"},{"location":"TAGS/#tag:tooling","title":"tooling","text":"<ul> <li>            Applying .mbox and .patch          </li> <li>            Backporting          </li> <li>            Kbuild          </li> <li>            Kconfig          </li> <li>            Kernel binaries          </li> <li>            Kernel compilation (cross)          </li> <li>            Kernel compilation (native)          </li> <li>            Xapian Query Syntax          </li> <li>            b4          </li> <li>            git basics          </li> <li>            git bisect          </li> <li>            git cherry-pick          </li> <li>            git interrogators          </li> <li>            git rebase          </li> <li>            git rebase (interactive)          </li> <li>            git send-email          </li> <li>            git worktree          </li> <li>            lei          </li> </ul>"},{"location":"TAGS/#tag:tracing","title":"tracing","text":"<ul> <li>            Event sources          </li> <li>            Tracepoints          </li> <li>            Tracing overview          </li> <li>            bpftrace          </li> <li>            ftrace (trace-cmd)          </li> <li>            ftrace (tracefs)          </li> </ul>"},{"location":"TAGS/#tag:userspace-graphics","title":"userspace-graphics","text":"<ul> <li>            Mesa          </li> <li>            Mutter          </li> <li>            Wayland protocol          </li> <li>            libdrm          </li> <li>            libinput          </li> </ul>"},{"location":"TAGS/#tag:work-deferring","title":"work-deferring","text":"<ul> <li>            Workqueue          </li> <li>            tasklet          </li> </ul>"},{"location":"TAGS/#tag:workflows","title":"workflows","text":"<ul> <li>            Coding patterns          </li> <li>            Overview          </li> <li>            Release model          </li> <li>            Stable releases          </li> <li>            Upstreaming process          </li> <li>            patman          </li> </ul>"},{"location":"concurrency/compiler-barriers/","title":"Compiler Barriers","text":"","tags":["concurrency"]},{"location":"concurrency/compiler-barriers/#references","title":"References","text":"","tags":["concurrency"]},{"location":"concurrency/compiler-barriers/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: The Kernel Concurrency Sanitizer</li> <li>Status Report: Broken Dependency Orderings in the Linux Kernel - Marco Elver, Paul Heidekr\u00fcger</li> </ul>","tags":["concurrency"]},{"location":"concurrency/cpu-barriers/","title":"CPU Barriers","text":"","tags":["concurrency","barriers"]},{"location":"concurrency/cpu-barriers/#references","title":"References","text":"","tags":["concurrency","barriers"]},{"location":"concurrency/cpu-barriers/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: The Kernel Concurrency Sanitizer</li> <li>Does an x86 CPU Reorder Instructions?</li> <li>Arm's Weakly-Ordered Memory Model and Barrier Requirements - Ash Wilding, Amazon</li> <li>Arm Barriers 101: When to use DSB and ISB</li> <li>What Every Programmer Should Know about How CPUs Work \u2022 Matt Godbol  \u2022 GOTO 2024</li> </ul>","tags":["concurrency","barriers"]},{"location":"concurrency/dl_sched/","title":"dl_sched","text":"","tags":["concurrency","schedulers"]},{"location":"concurrency/dl_sched/#references","title":"References","text":"","tags":["concurrency","schedulers"]},{"location":"concurrency/dl_sched/#videos","title":"Videos","text":"<ul> <li>(Part 1, 9am GMT) Using Linux kernel for Real-Time Systems (38:10)</li> <li>(Part 2, 9am GMT) Using Linux-Kernel for Real-Time systems (23:08)</li> <li>SCHED_DEADLINE semi partitioned scheduler and dlmon</li> <li>Embedded Recipes 2017 - Understanding SCHED_DEADLINE - Steven Rostedt</li> <li>Results from using SCHED_DEADLINE for energy-aware optimization of RT DAGs on heterogeneous hardware</li> </ul>","tags":["concurrency","schedulers"]},{"location":"concurrency/fair_sched/","title":"fair_sched","text":"","tags":["concurrency","schedulers"]},{"location":"concurrency/fair_sched/#references","title":"References","text":"","tags":["concurrency","schedulers"]},{"location":"concurrency/fair_sched/#videos","title":"Videos","text":"<ul> <li>(Part 1, 9am GMT) Using Linux kernel for Real-Time Systems (21:49)</li> <li>(Part 2, 9am GMT) Using Linux-Kernel for Real-Time systems (12:08)</li> <li>Michal Koutn\u00fd: EEVDF is the new (sched_)normal</li> <li>From Linux CFS Scheduler to Goroutine Scheduler</li> <li>SAN19-419 Why you should use the SCHED_IDLE CFS scheduling policy</li> <li>Introduction to SCHED_NORMAL (Peter Zijlstra)</li> </ul>","tags":["concurrency","schedulers"]},{"location":"concurrency/hrtimer/","title":"hrtimer","text":"","tags":["concurrency","time"]},{"location":"concurrency/hrtimer/#references","title":"References","text":"","tags":["concurrency","time"]},{"location":"concurrency/hrtimer/#videos","title":"Videos","text":"<ul> <li>Let's code a Linux Driver - 9: High Resolution Timer in a Linux Kernel Module</li> </ul>","tags":["concurrency","time"]},{"location":"concurrency/hrtimer/#links","title":"Links","text":"<ul> <li>[PATCH v2 00/12] Consolidate hrtimer initialization - Part 5</li> <li>[PATCH v2 00/31] hrtimers: Consolidate hrtimer initialization - Part 2</li> </ul>","tags":["concurrency","time"]},{"location":"concurrency/irq/","title":"IRQ","text":"","tags":["concurrency","context"]},{"location":"concurrency/irq/#references","title":"References","text":"","tags":["concurrency","context"]},{"location":"concurrency/irq/#videos","title":"Videos","text":"<ul> <li>A Journey into Linux Interrupt Handling Bottom Halves - Allen Pais, Microsoft</li> <li>IRQs: the Hard, the Soft, the Threaded and the Preemptible</li> <li>Understanding Linux Interrupt Subsystem - Priya Dixit, Samsung Semiconductor India Research</li> </ul>","tags":["concurrency","context"]},{"location":"concurrency/memory-model/","title":"Memory Model","text":"","tags":["concurrency"]},{"location":"concurrency/memory-model/#references","title":"References","text":"","tags":["concurrency"]},{"location":"concurrency/memory-model/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: The Kernel Concurrency Sanitizer</li> <li>More Science Fiction than Fairy Tale: A Discussion of the Linux Kernel Memory Mo... Jonas Oberhauser</li> <li>P99 CONF 2023 | How to Avoid Learning the Linux-Kernel Memory Model by Paul McKenney</li> <li>Kernel Recipes 2024 - Case Study: Concurrent Counting</li> </ul>","tags":["concurrency"]},{"location":"concurrency/mutex/","title":"mutex","text":"","tags":["concurrency","locking"]},{"location":"concurrency/mutex/#references","title":"References","text":"","tags":["concurrency","locking"]},{"location":"concurrency/mutex/#videos","title":"Videos","text":"<ul> <li>Let's code a Linux Driver - 28: Mutex exclusive access to shared resources</li> </ul>","tags":["concurrency","locking"]},{"location":"concurrency/mutex/#links","title":"Links","text":"<ul> <li>Unreliable Guide To Locking on kernel doc.</li> </ul>","tags":["concurrency","locking"]},{"location":"concurrency/preemption/","title":"Preemption","text":"","tags":["concurrency"]},{"location":"concurrency/preemption/#references","title":"References","text":"","tags":["concurrency"]},{"location":"concurrency/preemption/#videos","title":"Videos","text":"<ul> <li>(Part 2, 9am GMT) Using Linux-Kernel for Real-Time systems (51:15)</li> <li>Giovanni Gherdovich: Recent works on kernel preemption models</li> <li>Giovanni Gherdovich The four kernel preemption flavors in Linux</li> <li>Real time Linux - Bogdan Lezhepekov, Radoslav Kolev (18:15)</li> <li>An introduction to real-time Linux</li> <li>Kernel Recipes 2023 - Coming soon</li> </ul>","tags":["concurrency"]},{"location":"concurrency/processes/","title":"Processes","text":"","tags":["concurrency","context"]},{"location":"concurrency/processes/#references","title":"References","text":"","tags":["concurrency","context"]},{"location":"concurrency/processes/#videos","title":"Videos","text":"<ul> <li>Context Switching in the Linux Kernel - Sharad</li> <li>Tutorial: Leveraging the OS CPU Scheduler to Write Real-Time MT Apps - Kaiwan Billimoria, kaiwanTECH</li> <li>Thread implementation #5 - Linux context switch | cs370</li> <li>Breaking and Protecting Linux Kernel Stack - Elena Reshetova, Intel</li> <li>Threads in Embedded Linux- 6 Easy Pieces - Lo\u00efc Domaign\u00e9, Doulos</li> </ul>","tags":["concurrency","context"]},{"location":"concurrency/rcu/","title":"RCU","text":"","tags":["concurrency","locking"]},{"location":"concurrency/rcu/#references","title":"References","text":"","tags":["concurrency","locking"]},{"location":"concurrency/rcu/#videos","title":"Videos","text":"<ul> <li>Decoding Those Inscrutable RCU CPU Stall Warnings</li> <li>Mentorship Session: Unraveling RCU-Usage Mysteries (Fundamentals)</li> <li>Mentorship Session: Unraveling RCU-Usage Mysteries (Additional Use Cases)</li> </ul>","tags":["concurrency","locking"]},{"location":"concurrency/rt_sched/","title":"rt_sched","text":"","tags":["concurrency","schedulers"]},{"location":"concurrency/rt_sched/#references","title":"References","text":"","tags":["concurrency","schedulers"]},{"location":"concurrency/rt_sched/#videos","title":"Videos","text":"<ul> <li>(Part 1, 9am GMT) Using Linux kernel for Real-Time Systems (32:19)</li> <li>(Part 2, 9am GMT) Using Linux-Kernel for Real-Time systems (20:22)</li> </ul>","tags":["concurrency","schedulers"]},{"location":"concurrency/scheduler-overview/","title":"Scheduler Overview","text":"","tags":["concurrency"]},{"location":"concurrency/scheduler-overview/#references","title":"References","text":"","tags":["concurrency"]},{"location":"concurrency/scheduler-overview/#videos","title":"Videos","text":"<ul> <li>LLC 2025 - Linux scheduler overview and update, by Linus Walleij</li> <li>(Part 1, 9am GMT) Using Linux kernel for Real-Time Systems (21:49)</li> <li>(Part 2, 9am GMT) Using Linux-Kernel for Real-Time systems (12:08)</li> <li>Brief History of Linux CPU Scheduler - Huichun Feng</li> <li>YVR18-220:The Linux Kernel Scheduler (For Beginners)</li> <li>BKK19-TR03 - The Linux Kernel Scheduler - Overview</li> <li>SAN19-220 Deep dive in the scheduler</li> </ul>","tags":["concurrency"]},{"location":"concurrency/semaphore/","title":"semaphore","text":"","tags":["concurrency","locking"]},{"location":"concurrency/semaphore/#references","title":"References","text":"","tags":["concurrency","locking"]},{"location":"concurrency/semaphore/#links","title":"Links","text":"<ul> <li>The shrinking role of semaphores on LWN</li> </ul>","tags":["concurrency","locking"]},{"location":"concurrency/softirq/","title":"softirq","text":"","tags":["concurrency","context"]},{"location":"concurrency/softirq/#references","title":"References","text":"","tags":["concurrency","context"]},{"location":"concurrency/softirq/#videos","title":"Videos","text":"<ul> <li>A Journey into Linux Interrupt Handling Bottom Halves - Allen Pais, Microsoft</li> <li>Getting Around to It: Deferred Work in the Linux Kernel - Alison Chaiken, Aurora Innovation</li> <li>IRQs: the Hard, the Soft, the Threaded and the Preemptible</li> <li>Unblocking the softirq lock for PREEMPT_RT - Sebastian Siewior</li> </ul>","tags":["concurrency","context"]},{"location":"concurrency/spinlock/","title":"spinlock","text":"","tags":["concurrency","locking"]},{"location":"concurrency/spinlock/#references","title":"References","text":"","tags":["concurrency","locking"]},{"location":"concurrency/spinlock/#videos","title":"Videos","text":"<ul> <li>Real time Linux - Bogdan Lezhepekov, Radoslav Kolev (20:44)</li> <li>Alex Kogan \u2014 New locks for the old kernel</li> <li>Parallelisation in the Linux Kernel - Handmade Seattle 2020</li> </ul>","tags":["concurrency","locking"]},{"location":"concurrency/spinlock/#links","title":"Links","text":"<ul> <li>Also see Unreliable Guide To Locking on kernel doc.</li> </ul>","tags":["concurrency","locking"]},{"location":"concurrency/strace/","title":"EDITME","text":"","tags":["concurrency","system-calls"]},{"location":"concurrency/strace/#references","title":"References","text":"","tags":["concurrency","system-calls"]},{"location":"concurrency/strace/#videos","title":"Videos","text":"<ul> <li>Strace: Monitoring The Kernel-User-Space Conversation - Michael Kerrisk</li> <li>Modern strace - DevConf.CZ 2023</li> <li>Tutorial: Debugging with Strace - A Peek Behind the Scenes of Linux Processes - Avikam Rozenfeld</li> <li>Using strace to troubleshoot issues - DevConf.CZ 2021</li> <li>Using Strace to Understand GitLab - Part 1: Intro</li> <li>Using Strace to Understand GitLab - Part 2: Git</li> </ul>","tags":["concurrency","system-calls"]},{"location":"concurrency/system-calls/","title":"System Calls","text":"","tags":["concurrency","system-calls"]},{"location":"concurrency/system-calls/#references","title":"References","text":"","tags":["concurrency","system-calls"]},{"location":"concurrency/system-calls/#videos","title":"Videos","text":"<ul> <li>Syscalls and Strace</li> <li>What Have Syscalls Done for you Lately?</li> <li>MAD24 315 Rethinking the kernel system call entry</li> <li>Linux ABI - Syscalls in Assembly and Calling Assembly from C</li> <li>For x86-64 <code>syscall</code>/<code>sysret</code> instruction, see videos in Arch2001 and its full playlist.</li> </ul>","tags":["concurrency","system-calls"]},{"location":"concurrency/tasklet/","title":"Tasklet","text":"","tags":["concurrency","work-deferring"]},{"location":"concurrency/tasklet/#references","title":"References","text":"","tags":["concurrency","work-deferring"]},{"location":"concurrency/tasklet/#videos","title":"Videos","text":"<ul> <li>The end of tasklets on LWN</li> <li>Modernizing the tasklet API on LWN</li> <li>IRQs: the Hard, the Soft, the Threaded and the Preemptible (37:02 ~ 39:59)</li> </ul>","tags":["concurrency","work-deferring"]},{"location":"concurrency/threaded-irq/","title":"Threaded IRQ","text":"","tags":["concurrency"]},{"location":"concurrency/threaded-irq/#references","title":"References","text":"","tags":["concurrency"]},{"location":"concurrency/threaded-irq/#videos","title":"Videos","text":"<ul> <li>What Every Driver Developer Should Know about RT - Julia Cartwright, National Instruments (08:55)</li> <li>TUT 1279 The four kernel preemption flavors in Linux (17:02)</li> </ul>","tags":["concurrency"]},{"location":"concurrency/time/","title":"Timer and timekeeping","text":"","tags":["concurrency","time"]},{"location":"concurrency/time/#references","title":"References","text":"","tags":["concurrency","time"]},{"location":"concurrency/time/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: The Ticking Beast: a Deep Dive Into Timers, Timekeeping, Tick &amp; Tickless Kernels</li> <li>Timekeeping in the Linux Kernel - Stephen Boyd, Qualcomm Innovation Center</li> </ul>","tags":["concurrency","time"]},{"location":"concurrency/vdso/","title":"vDSO","text":"","tags":["concurrency","system-calls"]},{"location":"concurrency/vdso/#references","title":"References","text":"","tags":["concurrency","system-calls"]},{"location":"concurrency/vdso/#videos","title":"Videos","text":"<ul> <li>Using GNU poke: looking at the vDSO</li> </ul>","tags":["concurrency","system-calls"]},{"location":"concurrency/workqueue/","title":"Workqueue","text":"","tags":["concurrency","work-deferring"]},{"location":"concurrency/workqueue/#references","title":"References","text":"","tags":["concurrency","work-deferring"]},{"location":"concurrency/workqueue/#videos","title":"Videos","text":"<ul> <li>A Journey into Linux Interrupt Handling Bottom Halves - Allen Pais, Microsoft</li> <li>Getting Around to It: Deferred Work in the Linux Kernel - Alison Chaiken, Aurora Innovation (24:02)</li> <li>What You Always Wanted to Know About Workqueues</li> </ul>","tags":["concurrency","work-deferring"]},{"location":"debugging/bpftrace/","title":"bpftrace","text":"","tags":["debugging","tracing"]},{"location":"debugging/bpftrace/#references","title":"References","text":"","tags":["debugging","tracing"]},{"location":"debugging/bpftrace/#videos","title":"Videos","text":"<ul> <li>Linux tracing made simpler with bpftrace - DevConf.CZ 2022</li> <li>An introduction to bpftrace tracing language - DevConf.CZ 2020</li> <li>bpftrace internals - DevConf.CZ 2020</li> </ul>","tags":["debugging","tracing"]},{"location":"debugging/call-trace-analysis/","title":"Call trace analysis","text":"","tags":["debugging"]},{"location":"debugging/call-trace-analysis/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/call-trace-analysis/#videos","title":"Videos","text":"<ul> <li>If (oops) { Do_not_panic(); } - Lucky Tyagi, Samsung Semiconductor India R&amp;D Center</li> <li>Tools and Techniques to Debug an Embedded Linux System</li> </ul>","tags":["debugging"]},{"location":"debugging/call-trace-analysis/#links","title":"Links","text":"<ul> <li>The tale of a single register value</li> <li>admin-guide/bug-hunting.html</li> <li>Understanding a Kernel Oops!</li> </ul>","tags":["debugging"]},{"location":"debugging/coccinelle/","title":"Coccinelle","text":"","tags":["debugging","static-analysis"]},{"location":"debugging/coccinelle/#references","title":"References","text":"","tags":["debugging","static-analysis"]},{"location":"debugging/coccinelle/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: Coccinelle: Automating Large-scale Evolution and Bug Finding in C Code</li> <li>SAN19-500K1 Keynote: Coccinelle: 10 Years of Automated Evolution in the Linux Kernel</li> </ul>","tags":["debugging","static-analysis"]},{"location":"debugging/debugfs/","title":"debugfs","text":"<p>This is here to remind that susbsystem-specific debugfs entries do exist and are helpful for debugging, before you have to roll your own.</p>","tags":["debugging"]},{"location":"debugging/debugfs/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/debugfs/#videos","title":"Videos","text":"","tags":["debugging"]},{"location":"debugging/debugfs/#links","title":"Links","text":"<ul> <li>DebugFS from kernel doc</li> </ul>","tags":["debugging"]},{"location":"debugging/debugging-overview/","title":"Kernel Debugging Overview","text":"","tags":["debugging"]},{"location":"debugging/debugging-overview/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/debugging-overview/#videos","title":"Videos","text":"<ul> <li>Tools and Techniques to Debug an Embedded Linux System - Sergio Prado, Embedded Labworks</li> <li>Tools and Techniques to Debug an Embedded Linux System</li> <li>Mentorship Session: Linux Kernel Debugging Tricks of the Trade</li> <li>Feb 8 at 5pm GMT \"Kernel Debug Stories for Arm\" (in English)</li> </ul>","tags":["debugging"]},{"location":"debugging/debugging-overview/#links","title":"Links","text":"","tags":["debugging"]},{"location":"debugging/decode_stacktrace/","title":"decode_stacktrace.sh","text":"","tags":["debugging"]},{"location":"debugging/decode_stacktrace/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/decode_stacktrace/#videos","title":"Videos","text":"<ul> <li>The tale of a single register value</li> </ul>","tags":["debugging"]},{"location":"debugging/decode_stacktrace/#links","title":"Links","text":"<ul> <li>Decoding stack traces in the Linux kernel</li> <li>The tale of a single register value</li> </ul>","tags":["debugging"]},{"location":"debugging/drgn/","title":"drgn","text":"","tags":["debugging","postmoterm"]},{"location":"debugging/drgn/#references","title":"References","text":"","tags":["debugging","postmoterm"]},{"location":"debugging/drgn/#videos","title":"Videos","text":"<ul> <li>Michal Koutn\u00fd Meeting drgn</li> <li>Kernel Recipes 2022 - Powerful and Programmable Kernel Debugging with drgn</li> </ul>","tags":["debugging","postmoterm"]},{"location":"debugging/dynamic-debug/","title":"Dynamic Debug","text":"","tags":["debugging"]},{"location":"debugging/dynamic-debug/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/dynamic-debug/#videos","title":"Videos","text":"<ul> <li>SAN19-424 Event Tracing and Pstore with a pinch of Dynamic debug (37:01)</li> </ul>","tags":["debugging"]},{"location":"debugging/dynamic-debug/#links","title":"Links","text":"<ul> <li>dynamic-debug-howto</li> <li>How to use the kernel dynamic debug</li> </ul>","tags":["debugging"]},{"location":"debugging/event-sources/","title":"Events sources","text":"","tags":["debugging","tracing"]},{"location":"debugging/event-sources/#references","title":"References","text":"","tags":["debugging","tracing"]},{"location":"debugging/event-sources/#videos","title":"Videos","text":"<ul> <li>Probes in the kernel, where it goes - Mr HIRAMATSU, Masami</li> <li>Mentorship Session: An Introduction to Linux Tracing and its Concepts</li> </ul>","tags":["debugging","tracing"]},{"location":"debugging/kasan/","title":"KASAN","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kasan/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kasan/#videos","title":"Videos","text":"<ul> <li>Embedded Fest 2021. Ruslan Bilovol. Linux Kernel hardening techniques</li> <li>Sanitizing the Linux Kernel \u2014 On KASAN and other Dynamic Bug-finding Tools - Andrey Konovalov</li> <li>Mitigating Linux kernel memory corruptions with Arm Memory Tagging | Linux Security Summit 2021</li> <li>Jerome Marchand: KASan or how to get rid of memory corruption</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/kcsan/","title":"KCSAN","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kcsan/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kcsan/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: The Kernel Concurrency Sanitizer</li> <li>LPC 2020 - Refereed Track - Day 1 (01:59:00) (title: Data-race detection in the Linux Kernel)</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/kcsan/#links","title":"Links","text":"<ul> <li>Concurrency bugs should fear the big bad data-race detector (part 1)</li> <li>Concurrency bugs should fear the big bad data-race detector (part 2)</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/kdump/","title":"kdump","text":"","tags":["debugging","postmoterm"]},{"location":"debugging/kdump/#references","title":"References","text":"","tags":["debugging","postmoterm"]},{"location":"debugging/kdump/#videos","title":"Videos","text":"<ul> <li>Kdump in an hour</li> <li>Postmortem Analysis with Kexec/kdump and Ftrace - Steven Rostedt, Google</li> <li>Kernel Recipes 2015 - Kernel dump analysis - by Adrien Mahieux</li> <li>Marian Marinov - Analyzing Linux kernel crash dumps</li> <li>Kernel dump analysis made quick and easy!</li> </ul>","tags":["debugging","postmoterm"]},{"location":"debugging/kfence/","title":"KFENCE","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kfence/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kfence/#videos","title":"Videos","text":"<ul> <li>ELISA Summit (Sep 2022)| Using Memory Access Error Detection for Safety Argumentation</li> <li>google/kernel-sanitizers</li> <li>Linux SLUB Allocator Internals and Debugging - KFENCE, Part 4 of 4</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/kgdb/","title":"kgdb","text":"","tags":["debugging"]},{"location":"debugging/kgdb/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/kgdb/#videos","title":"Videos","text":"<ul> <li>Debugging the Linux kernel with GDB</li> <li>Debugging the Linux kernel with GDB (Video)</li> <li>KGDB (playlist)</li> <li>Using Serial kdb / kgdb to Debug the Linux Kernel - Douglas Anderson, Google</li> </ul>","tags":["debugging"]},{"location":"debugging/kmemleak/","title":"KMEMLEAK","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kmemleak/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/kmemleak/#videos","title":"Videos","text":"<ul> <li>Embedded Fest 2021. Ruslan Bilovol. Linux Kernel hardening techniques</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/kprobe/","title":"kprobes","text":"","tags":["debugging"]},{"location":"debugging/kprobe/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/kprobe/#videos","title":"Videos","text":"<ul> <li>Jiri Wiesner Writing debugging modules</li> <li>Where have all the kprobes gone - Jiri Olsa</li> <li>Kprobes internals - Thomas Bitzberger - LSE Week 2017 (FR)</li> </ul>","tags":["debugging"]},{"location":"debugging/lockdep/","title":"Lockdep","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/lockdep/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/lockdep/#videos","title":"Videos","text":"<ul> <li>What Lockdep Does and Doesn't - Byungchul Park, LG Electronics</li> <li>LPC2018 - Recursive read deadlocks and Where to find them</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/pstore/","title":"pstore","text":"","tags":["debugging"]},{"location":"debugging/pstore/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/pstore/#videos","title":"Videos","text":"<ul> <li>Recovering the Linux kernel logs from a previous boot with pstore and ramoops</li> <li>SAN19-424 Event Tracing and Pstore with a pinch of Dynamic debug</li> </ul>","tags":["debugging"]},{"location":"debugging/sanitizer-overview/","title":"Sanitizer overview","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/sanitizer-overview/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/sanitizer-overview/#videos","title":"Videos","text":"<ul> <li>Kernel Sanitizers Office Hours - POTAPENKO Alexander, VYUKOV Dmitry, COOK Kees, ELVER Marco, MCKE...</li> <li>Mentorship Session: Dynamic Program Analysis for Fun and Profit</li> <li>ELISA Summit (Sep 2022)| Using Memory Access Error Detection for Safety Argumentation</li> <li>google/kernel-sanitizers</li> </ul>","tags":["debugging","sanitizers"]},{"location":"debugging/smatch/","title":"EDITME","text":"","tags":["debugging"]},{"location":"debugging/smatch/#references","title":"References","text":"","tags":["debugging"]},{"location":"debugging/smatch/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: New Ideas for Smatch (Static Analysis)</li> <li>MAD24 216 What Can Static Analysis Do For You Smatch</li> </ul>","tags":["debugging"]},{"location":"debugging/smatch/#links","title":"Links","text":"<ul> <li>Linux Kernel Development - Smatch</li> </ul>","tags":["debugging"]},{"location":"debugging/sparse/","title":"SPARCE","text":"","tags":["debugging","static-analysis"]},{"location":"debugging/sparse/#references","title":"References","text":"","tags":["debugging","static-analysis"]},{"location":"debugging/sparse/#videos","title":"Videos","text":"<ul> <li>Mentorship Session: Static Analysis &amp; Tools</li> <li>Sparse warnings</li> </ul>","tags":["debugging","static-analysis"]},{"location":"debugging/trace-cmd/","title":"trace-cmd","text":"","tags":["debugging","tracing"]},{"location":"debugging/trace-cmd/#references","title":"References","text":"","tags":["debugging","tracing"]},{"location":"debugging/trace-cmd/#videos","title":"Videos","text":"<ul> <li>See what your computer is doing with Ftrace utilities</li> <li>Finding Sources of Latency on your Linux System - Steven Rostedt, VMware</li> <li>Embedded Recipes 2022 - Tracing on embedded boards</li> </ul>","tags":["debugging","tracing"]},{"location":"debugging/tracefs/","title":"tracefs","text":"","tags":["debugging","tracing"]},{"location":"debugging/tracefs/#references","title":"References","text":"","tags":["debugging","tracing"]},{"location":"debugging/tracefs/#videos","title":"Videos","text":"<ul> <li>Steven Rostedt - Learning the Linux Kernel with tracing</li> <li>BKK19-TR04 - Fantastic tracepoints and where to find them</li> <li>LF Live Mentorship Session: Tracing with Ftrace: Critical Tooling for Linux Development</li> <li>Embedded Fest 2021. Steven Rostedt. Dynamic tracing within a busybox environment</li> </ul>","tags":["debugging","tracing"]},{"location":"debugging/tracepoints/","title":"Tracepoints","text":"","tags":["debugging","tracing"]},{"location":"debugging/tracepoints/#references","title":"References","text":"","tags":["debugging","tracing"]},{"location":"debugging/tracepoints/#videos","title":"Videos","text":"<ul> <li>LF Live Mentorship Session: Tracing with Ftrace: Critical Tooling for Linux Development (07:03)</li> <li>BKK19-TR04 - Fantastic tracepoints and where to find them</li> <li>DEF CON 30 - Rex Guo, Junyuan Zeng - Trace me if you can: Bypassing Linux Syscall Tracing</li> <li>SAN19-424 Event Tracing and Pstore with a pinch of Dynamic debug</li> </ul>","tags":["debugging","tracing"]},{"location":"debugging/tracing-overview/","title":"Tracing Overview","text":"","tags":["debugging","tracing"]},{"location":"debugging/tracing-overview/#references","title":"References","text":"","tags":["debugging","tracing"]},{"location":"debugging/tracing-overview/#videos","title":"Videos","text":"<ul> <li>Steven Rostedt on the Linux Kernel's \"Hello World\"</li> <li>Mentorship Session: An Introduction to Linux Tracing and its Concepts</li> <li>Tracing Summit 2022 - State of the Linux Tracers</li> </ul>","tags":["debugging","tracing"]},{"location":"debugging/ubsan/","title":"UBSAN","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/ubsan/#references","title":"References","text":"","tags":["debugging","sanitizers"]},{"location":"debugging/ubsan/#videos","title":"Videos","text":"<ul> <li>Embedded Fest 2021. Ruslan Bilovol. Linux Kernel hardening techniques</li> </ul>","tags":["debugging","sanitizers"]},{"location":"drivers/acpi/","title":"ACPI","text":"","tags":["drivers"]},{"location":"drivers/acpi/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/acpi/#videos","title":"Videos","text":"<ul> <li>Andy Shevchenko | ACPI overlays for embedded devices</li> <li>Kernel Recipes 2015 - Representing device-tree peripherals in ACPI - by David Woodhouse</li> </ul>","tags":["drivers"]},{"location":"drivers/acpi/#links","title":"Links","text":"<ul> <li>ACPI Source Language (ASL) Tutorial from Intel.</li> </ul>","tags":["drivers"]},{"location":"drivers/clocks/","title":"Clocks","text":"","tags":["drivers"]},{"location":"drivers/clocks/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/clocks/#videos","title":"Videos","text":"<ul> <li>Tutorial: What The Clock! - Linux Clock Subsystem Internals - Neil Armstrong, BayLibre SAS</li> <li>Updating and Modernizing Clk (Clock) Drivers - Chen-Yu Tsai, Google</li> </ul>","tags":["drivers"]},{"location":"drivers/device-tree/","title":"Device tree","text":"","tags":["drivers"]},{"location":"drivers/device-tree/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/device-tree/#videos","title":"Videos","text":"<ul> <li>Webinar On-Demand: Demystifying Device Tree for NXP\u00ae i.MX Processors</li> <li>Enabling new hardware on embedded Linux (from schematics to the device tree)</li> <li>Demystifying Device Tree Concepts - Priya Dixit</li> <li>FOSDEM 2024 - From phone hardware to mobile Linux</li> <li>Device Tree: hardware description for everybody !</li> <li>5 ELC-2018 EALE I2C Drivers - Michael Opdenacker: example using I2C bus.</li> </ul>","tags":["drivers"]},{"location":"drivers/device_link/","title":"device_link","text":"","tags":["drivers"]},{"location":"drivers/device_link/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/device_link/#videos","title":"Videos","text":"<ul> <li>Kernel Recipes 2019 - What To Do When Your Device Depends on Another One</li> </ul>","tags":["drivers"]},{"location":"drivers/dma/","title":"DMA","text":"","tags":["drivers"]},{"location":"drivers/dma/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/dma/#videos","title":"Videos","text":"<ul> <li>Taming DMA: Tales Wrestling Memory Corruption - Ahmad Fatoum, Pengutronix</li> <li>Laurent Pinchart - mastering the dma and iommu apis | ELC 2014</li> <li>Linux DMA In Device Drivers</li> <li>Using DMA in a Linux PCI or PCI Express Driver</li> </ul>","tags":["drivers"]},{"location":"drivers/driver-model/","title":"Driver Model","text":"","tags":["drivers"]},{"location":"drivers/driver-model/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/driver-model/#videos","title":"Videos","text":"<ul> <li>5 ELC-2018 EALE I2C Drivers - Michael Opdenacker: example using I2C bus.</li> <li>Embedded Recipes 2019: Herd your socs become a matchmaker</li> <li>Linux Matchmaking: Helping devices and drivers find each other</li> </ul>","tags":["drivers"]},{"location":"drivers/driver-model/#links","title":"Links","text":"<ul> <li>Embedded Linux kernel and driver development training by Bootlin (free access).</li> <li>Working with devicetree: Free, but can only be accessed after registration.</li> </ul>","tags":["drivers"]},{"location":"drivers/dt-schema/","title":"DT-schema","text":"","tags":["drivers"]},{"location":"drivers/dt-schema/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/dt-schema/#videos","title":"Videos","text":"<ul> <li>How to Get Your DT Schema Bindings Accepted in Less Than 10 Iterations - Krzysztof Kozlowski, Linaro</li> </ul>","tags":["drivers"]},{"location":"drivers/firmware/","title":"Firmware","text":"","tags":["drivers"]},{"location":"drivers/firmware/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/firmware/#videos","title":"Videos","text":"<ul> <li>Unravelling How Firmware Interacts with the Linux Subsystem - Smitha T Murthy</li> <li>Getting a Time of Flight Camera Working in Linux, the Full Story from Kernel to User Space</li> </ul>","tags":["drivers"]},{"location":"drivers/firmware/#links","title":"Links","text":"<ul> <li>Linux Kernel Development - Firmware API</li> <li>The <code>linux-firmware</code> repository</li> </ul>","tags":["drivers"]},{"location":"drivers/gpio/","title":"GPIO","text":"","tags":["drivers"]},{"location":"drivers/gpio/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/gpio/#videos","title":"Videos","text":"<ul> <li>Introduction to Pin Muxing and GPIO Control Under Linux - Neil Armstrong, BayLibre</li> <li>Linus Walleij - GPIO and Pin Control for Embedded Systems</li> <li>GPIO for Engineers and Makers</li> <li>Linux GPIO: Evolution and Current State of the User API</li> <li>[ENG] Bartosz Golaszewski: \"New GPIO interface for linux user space\"</li> </ul>","tags":["drivers"]},{"location":"drivers/gpio/#links","title":"Links","text":"<ul> <li>GPIO device tree configuration</li> <li>GPIOLib overview</li> <li>How to control a GPIO in kernel space</li> <li>How to control a GPIO in userspace</li> </ul>","tags":["drivers"]},{"location":"drivers/i2c/","title":"I2C","text":"","tags":["drivers","bus"]},{"location":"drivers/i2c/#references","title":"References","text":"","tags":["drivers","bus"]},{"location":"drivers/i2c/#videos","title":"Videos","text":"<ul> <li>Basics of I2C on Linux - Luca Ceresoli, Bootlin</li> <li>5 ELC-2018 EALE I2C Drivers - Michael Opdenacker</li> <li>Tutorial: Introduction to I2C and SPI: Both In-kernel and In-userspace - Michael Welling</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/i2c/#links","title":"Links","text":"<ul> <li>Custom I2C peripheral in QEMU</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/interrupts/","title":"Interrupts","text":"","tags":["drivers"]},{"location":"drivers/interrupts/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/interrupts/#videos","title":"Videos","text":"<ul> <li>[x86] Linux Kernel Interrupt Delivery Configuration: How the Linux Kernel Interacts with Hardware - Adrian Huang, Lenovo</li> <li>Asahi Linux: PCI power management</li> <li>How Dealing with Modern Interrupt Architectures can Affect Your Sanity</li> <li>LVC20 102 Interrupt sub system in ARM boards using Xilinx Zynq Board</li> <li>Asahi Linux: PCI power management (first hour or so)</li> </ul>","tags":["drivers"]},{"location":"drivers/kernel-modules/","title":"Kernel Modules","text":"","tags":["drivers"]},{"location":"drivers/kernel-modules/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/kernel-modules/#videos","title":"Videos","text":"<ul> <li>2 ELC-2018 EALE Introduction to Kernel Modules - Behan Webster</li> <li>Linux bootcamp: From casual Linux user to kernel hacker - Part 4</li> <li>Understanding the Structure of a Linux Kernel Device Driver</li> <li>Into the Jungle - How to write a Linux kernel driver for any subsystem - Marta Rybczynska</li> </ul>","tags":["drivers"]},{"location":"drivers/pci/","title":"PCI and PCIe","text":"<p>This is a very huge topic spanning 6 generations of specifications (and PCIe 7 has just arrived). Luckily it doesn't take that much effort to start understanding output of <code>lspci</code>.</p>","tags":["drivers","bus"]},{"location":"drivers/pci/#references","title":"References","text":"","tags":["drivers","bus"]},{"location":"drivers/pci/#videos","title":"Videos","text":"<ul> <li>Overview of PCI(e) Subsystem - Kishon Vijay Abraham, Texas Instruments</li> <li>Writing a virtual PCI device + driver from scratch in 2 hours and 23 seconds</li> <li>Some of the videos in Arch4001 (playlist)</li> <li>Linux PCI(e) Driver Tutorial (playlist)</li> <li>GNU/Linux &amp; PCI (Express) (playlist)</li> <li>LIS25 207 How not to write PCIe controller drivers in Linux Kernel</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/pci/#links","title":"Links","text":"<ul> <li>Debugging PCIe Issues using lspci and setpci</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/pinctrl/","title":"Pinctrl","text":"","tags":["drivers"]},{"location":"drivers/pinctrl/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/pinctrl/#videos","title":"Videos","text":"<ul> <li>Introduction to Pin Muxing and GPIO Control Under Linux - Neil Armstrong, BayLibr</li> <li>Tutorial: Spelunking for Hardware Data - Matt Porter, Konsulko Group</li> <li>Linus Walleij - GPIO and Pin Control for Embedded Systems</li> </ul>","tags":["drivers"]},{"location":"drivers/platform-bus/","title":"Platform Bus","text":"","tags":["drivers","bus"]},{"location":"drivers/platform-bus/#references","title":"References","text":"","tags":["drivers","bus"]},{"location":"drivers/platform-bus/#videos","title":"Videos","text":"<ul> <li>BoF: Early Platform Drivers in Linux Kernel - Bartosz Golaszewski, BayLibre (first 5 minutes)</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/regmap/","title":"regmap","text":"","tags":["drivers"]},{"location":"drivers/regmap/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/regmap/#videos","title":"Videos","text":"<ul> <li>Simplify and Reuse Your Driver's Code with Regmaps - Ioan Adrian Ratiu, Collabora Ltd</li> </ul>","tags":["drivers"]},{"location":"drivers/spi/","title":"SPI","text":"","tags":["drivers","bus"]},{"location":"drivers/spi/#references","title":"References","text":"","tags":["drivers","bus"]},{"location":"drivers/spi/#videos","title":"Videos","text":"<ul> <li>6 ELC-2018 EALE SPI Drivers - Michael Welling</li> <li>Tutorial: Introduction to I2C and SPI: Both In-kernel and In-userspace - Michael Welling</li> <li>Groking the Linux SPI Subsystem - Matt Porter, Konsulko</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/spi/#links","title":"Links","text":"<ul> <li>Custom SPI peripheral in QEMU</li> </ul>","tags":["drivers","bus"]},{"location":"drivers/udev/","title":"udev","text":"","tags":["drivers"]},{"location":"drivers/udev/#references","title":"References","text":"","tags":["drivers"]},{"location":"drivers/udev/#videos","title":"Videos","text":"<ul> <li>Introducing Udev on Oracle Linux</li> <li>[ENG] Christian Brauner: \"Making the Kernel and Udev Namespace Aware\" / #LinuxPiter</li> </ul>","tags":["drivers"]},{"location":"drivers/udev/#links","title":"Links","text":"<ul> <li>Dynamic kernel device management with udev</li> <li>An introduction to Udev: The Linux subsystem for managing device events</li> <li>udev: Device Manager for the Linux Kernel in Userspace</li> <li>udev: Function Flow for KOBJECT_UEVENT kernel group message</li> </ul>","tags":["drivers"]},{"location":"drivers/usb/","title":"USB Bus","text":"","tags":["drivers","bus"]},{"location":"drivers/usb/#references","title":"References","text":"","tags":["drivers","bus"]},{"location":"drivers/usb/#videos","title":"Videos","text":"<ul> <li>A Tour of USB Device Controller (UDC) in Linux - Herv\u00e9 Codina, Bootlin</li> <li>Debugging Usually Slightly Broken (USB) Devices and Drivers - Krzysztof Opasiak, Samsung</li> <li>Watch Linux kernel developer write a USB driver from scratch in just 3h for Apple Xserve front-panel</li> </ul>","tags":["drivers","bus"]},{"location":"drm/apitrace/","title":"apitrace","text":"","tags":["graphics","debugging"]},{"location":"drm/apitrace/#references","title":"References","text":"","tags":["graphics","debugging"]},{"location":"drm/apitrace/#videos","title":"Videos","text":"<ul> <li>v3dv: experience using gfxreconstruct/apitrace traces for performance evaluation</li> <li>graphics performance analysis with frameretrace: a responsive ui for apitrace - mark janes, intel</li> <li>measuring and improving opengl performance</li> </ul>","tags":["graphics","debugging"]},{"location":"drm/apitrace/#links","title":"Links","text":"<ul> <li>apitrace/apitrace</li> </ul>","tags":["graphics","debugging"]},{"location":"drm/display-pipeline/","title":"Display Pipeline","text":"","tags":["graphics","kms"]},{"location":"drm/display-pipeline/#references","title":"References","text":"","tags":["graphics","kms"]},{"location":"drm/display-pipeline/#videos","title":"Videos","text":"<ul> <li>ELCE 2022: Navigating the Linux Graphics Stack</li> <li>Walking Through the Linux-Based Graphics Stack - Paul Kocialkowski, Bootlin</li> <li>Graphics: A Frame's Journey | FOSDEM 2023</li> </ul>","tags":["graphics","kms"]},{"location":"drm/display-pipeline/#link","title":"Link","text":"<ul> <li>An introduction to the Linux graphics stack</li> <li>The Linux graphics stack in a nutshell, part 1</li> <li>The Linux graphics stack in a nutshell, part 2</li> <li>DRM KMS overview</li> </ul>","tags":["graphics","kms"]},{"location":"drm/dp-mst/","title":"DisplayPort MST","text":"","tags":["graphics"]},{"location":"drm/dp-mst/#references","title":"References","text":"","tags":["graphics"]},{"location":"drm/dp-mst/#videos","title":"Videos","text":"<ul> <li>XDC 2022 | Introduction to DisplayPort MST support on Linux | Lyude Paul</li> <li>XDC 2022 Demo | Progress of MST improvement from AMD | Wayne Lin</li> </ul>","tags":["graphics"]},{"location":"drm/dp/","title":"DisplayPort","text":"","tags":["graphics","display-interface"]},{"location":"drm/dp/#references","title":"References","text":"","tags":["graphics","display-interface"]},{"location":"drm/dp/#videos","title":"Videos","text":"<ul> <li>What is DisplayPort (DP)?</li> <li>TI Precision Labs - Video Interface: Understanding DP Link Training</li> <li>Essentials of DisplayPort Protocols at HBR3 8.1 Gb/s Link Rates</li> <li>Display support on Embedded Systems: Linux implementation &amp; limitations (Neil Armstrong, Linaro)</li> <li>A Journey through Upstream Atomic KMS to Achieve DP Compliance - Manasi Navare, Intel</li> </ul>","tags":["graphics","display-interface"]},{"location":"drm/drm-ci/","title":"DRM-CI","text":"","tags":["graphics","testing"]},{"location":"drm/drm-ci/#references","title":"References","text":"","tags":["graphics","testing"]},{"location":"drm/drm-ci/#videos","title":"Videos","text":"<ul> <li>Quickly Test Your Kernel with GitLab CI - Helen Koike, Collabora</li> </ul>","tags":["graphics","testing"]},{"location":"drm/drm-ci/#links","title":"Links","text":"<ul> <li>Automated testing of the DRM subsystem</li> <li>DRM-CI: A GitLab-CI pipeline for Linux kernel testing</li> </ul>","tags":["graphics","testing"]},{"location":"drm/drm-kunit/","title":"DRM KUnit Tests","text":"","tags":["graphics","testing"]},{"location":"drm/drm-kunit/#references","title":"References","text":"","tags":["graphics","testing"]},{"location":"drm/drm-kunit/#videos","title":"Videos","text":"<ul> <li>XDC 2023 | October 17 | Status of KUnit tests on DRM subsystem | Arthur Grillo, Carlos Gallo Filho</li> <li>XDC 2022 | KUnit sorcery and the uncanny nature of FPU in the DRM | I. Basso &amp; M. Canal &amp; M. Lemes</li> </ul>","tags":["graphics","testing"]},{"location":"drm/drm/","title":"DRM","text":"<p>This is intended for parts of the kernel that are related to the rendering part of the GPU driver, but I haven't been able to figure out what this topic should be called. Simply calling it DRM might be confusing since KMS is also a part of DRM and it's about displaying, but let's keep it for now.</p>","tags":["graphics"]},{"location":"drm/drm/#references","title":"References","text":"","tags":["graphics"]},{"location":"drm/drm/#videos","title":"Videos","text":"<ul> <li>I want to make a GPU (Playlist)</li> <li>Overview of a Modern DRM Driver - Matt Coster, Imagination Technologies</li> <li>XDC 2023 | October 19 | With great power comes less responsibility | B. Brezillon, D. Krummrich</li> <li>Everything Great about Upstream Graphics - Daniel Vetter, Intel</li> <li>Why Are GPUs (Not) Fast - A Trip Through the Driver Stack - Lucas Stach, Pengutronix</li> <li>Mesa3D Unveiled: From glDrawArrays to GPU Magic - Christian Gmeiner, Igalia</li> </ul>","tags":["graphics"]},{"location":"drm/edid/","title":"EDID","text":"","tags":["graphics"]},{"location":"drm/edid/#references","title":"References","text":"","tags":["graphics"]},{"location":"drm/edid/#videos","title":"Videos","text":"<ul> <li>Extended Display Identification Data (EDID): Problems, Pitfalls and Complications - Hans Verkuil</li> </ul>","tags":["graphics"]},{"location":"drm/hdmi/","title":"HDMI","text":"","tags":["graphics","display-interface"]},{"location":"drm/hdmi/#references","title":"References","text":"","tags":["graphics","display-interface"]},{"location":"drm/hdmi/#videos","title":"Videos","text":"<ul> <li>Display support on Embedded Systems: Linux implementation &amp; limitations (Neil Armstrong, Linaro)</li> <li>HDMI 4k Video: Lessons Learned - Hans Verkuil, Cisco Systems Norway</li> <li>HDMI CEC: What? Why? How?</li> </ul>","tags":["graphics","display-interface"]},{"location":"drm/igt-gpu-tools/","title":"igt-gpu-tools","text":"","tags":["graphics","testing"]},{"location":"drm/igt-gpu-tools/#references","title":"References","text":"","tags":["graphics","testing"]},{"location":"drm/igt-gpu-tools/#videos","title":"Videos","text":"<ul> <li>drm/igt-gpu-tools</li> <li>XDC 2020 | VKMS improvements using IGT GPU Tools</li> <li>IGT GPU Tools - the past, the present, the future</li> </ul>","tags":["graphics","testing"]},{"location":"drm/igt-gpu-tools/#links","title":"Links","text":"<ul> <li>drm/igt-gpu-tools</li> </ul>","tags":["graphics","testing"]},{"location":"drm/kms-atomic/","title":"KMS","text":"","tags":["graphics","kms"]},{"location":"drm/kms-atomic/#references","title":"References","text":"","tags":["graphics","kms"]},{"location":"drm/kms-atomic/#videos","title":"Videos","text":"<ul> <li>Kernel Locking Engineering - Daniel Vetter, Intel</li> <li>\"Everything Awesome about GPU Drivers\" - Daniel Vetter (LCA 2020) (04:41)</li> <li>FOSDEM 2015 | Atomic Mode-Setting</li> <li>A Journey through Upstream Atomic KMS to Achieve DP Compliance - Manasi Navare, Intel</li> <li>XDC2015 - Daniel Vetter - Atomic Modesetting for Drivers</li> <li>XDC 2019 | Enabling 8K displays - A story of 33M pixels, 2 CRTCs and no Tears! - Manasi Navare</li> </ul>","tags":["graphics","kms"]},{"location":"drm/kms-atomic/#links","title":"Links","text":"<ul> <li>Atomic mode setting design overview, part 1</li> <li>Atomic mode setting design overview, part 2</li> <li>Atomic KMS/DRM on multiple displays is hindered by driver-global serialization of atomic commits</li> </ul>","tags":["graphics","kms"]},{"location":"drm/kms-bridges/","title":"KMS Bridges","text":"","tags":["graphics","kms"]},{"location":"drm/kms-bridges/#references","title":"References","text":"","tags":["graphics","kms"]},{"location":"drm/kms-bridges/#videos","title":"Videos","text":"<ul> <li>Diving deep into Linux DRM bridge chaining</li> <li>Linux DRM Bridge: A Potential Replacer for the DRM Encoder to Standardise a Single API? | Jagan Teki</li> <li>Standardising Linux DRM driver implementations by interfacing DRM Bridge as a single API</li> <li>XDC 2022 | Runtime display switch implementation in a Linux DRM bridge subsystem | Jagan Teki</li> <li>LVC21F-223 Demystifying Linux MIPI DSI Bridge Subsystem</li> </ul>","tags":["graphics","kms"]},{"location":"drm/kms/","title":"KMS","text":"","tags":["graphics","kms"]},{"location":"drm/kms/#references","title":"References","text":"","tags":["graphics","kms"]},{"location":"drm/kms/#videos","title":"Videos","text":"<ul> <li>Getting pixels on screen on Linux: introduction to Kernel Mode Setting - Simon Ser</li> <li>A Current Overview of the DRM KMS Driver-Side APIs - Paul Kocialkowski, Bootlin</li> <li>ELCE 2022: Navigating the Linux Graphics Stack</li> <li>Graphics: A Frame's Journey | FOSDEM 2023</li> <li>Kernel Recipes 2017 - An introduction to the Linux DRM subsystem - Maxime Ripard</li> <li>Kernel Recipes 2015 - Anatomy of an Atomic KMS Driver - by Laurent Pinchart</li> <li>XDC 2019 | A case study on frame presentation from user space via KMS - Heinrich Fink</li> <li>LVC21F-108 Advanced KMS</li> <li>Demystifying Linux MIPI DSI Subsystem - Jagan Teki, Amarula Solutions</li> <li>Embedded Linux Conference 2013 - Anatomy of an Embedded KMS Driver</li> <li>Linux DRM: New Picture Processing API</li> </ul>","tags":["graphics","kms"]},{"location":"drm/kms/#links","title":"Links","text":"<ul> <li>DRM KMS overview on ST wiki</li> <li>Kernel Mode Setting (KMS) in Linux kernel documentation.</li> <li>Display Driver Stack from AMD.</li> <li>DRM/KMS Kernel Subsystem also from AMD.</li> </ul>","tags":["graphics","kms"]},{"location":"drm/libdrm/","title":"libdrm","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/libdrm/#references","title":"References","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/libdrm/#videos","title":"Videos","text":"<ul> <li>Getting pixels on screen on Linux: introduction to Kernel Mode Setting - Simon Ser</li> </ul>","tags":["graphics","userspace-graphics"]},{"location":"drm/libinput/","title":"libinput","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/libinput/#references","title":"References","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/libinput/#videos","title":"Videos","text":"<ul> <li>\"Write a single library to handle all input devices, it'll be easy\" they said...</li> </ul>","tags":["graphics","userspace-graphics"]},{"location":"drm/lvds/","title":"LVDS","text":"","tags":["graphics","display-interface"]},{"location":"drm/lvds/#references","title":"References","text":"","tags":["graphics","display-interface"]},{"location":"drm/lvds/#videos","title":"Videos","text":"<ul> <li>LVDS Display Panel</li> <li>Video signal transmission between motherboard and Tcon via LVDS. VESA and JEIDA standard</li> <li>Testing and Remote Access to Embedded System DPI/LVDS Display Output - Marek Vasut</li> <li>What is LVDS ... Old laptop Screen reuse</li> </ul>","tags":["graphics","display-interface"]},{"location":"drm/mesa/","title":"Mesa","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/mesa/#references","title":"References","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/mesa/#videos","title":"Videos","text":"<ul> <li>Mesa3D Unveiled: From glDrawArrays to GPU Magic - Christian Gmeiner, Igalia</li> <li>Embedded Graphics Drivers in Mesa - Neil Roberts, Igalia</li> <li>Linux Graphics 101 - Rohan Garg</li> </ul>","tags":["graphics","userspace-graphics"]},{"location":"drm/mutter/","title":"Mutter","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/mutter/#references","title":"References","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/mutter/#videos","title":"Videos","text":"<ul> <li>A Look Inside Mutter / Gnome Shell</li> </ul>","tags":["graphics","userspace-graphics"]},{"location":"drm/rendering-pipeline/","title":"Rendering pipeline","text":"","tags":["graphics"]},{"location":"drm/rendering-pipeline/#references","title":"References","text":"","tags":["graphics"]},{"location":"drm/rendering-pipeline/#videos","title":"Videos","text":"<ul> <li>The Linux 3D graphics stack with Alyssa Rosenzweig</li> <li>Open Source Graphics 101: Getting Started - Boris Brezillon, Collabora</li> <li>Thomas Zimmermann The Linux Graphics Stack in a Nutshell</li> </ul>","tags":["graphics"]},{"location":"drm/rgb/","title":"RGB","text":"","tags":["graphics","display-interface"]},{"location":"drm/rgb/#references","title":"References","text":"","tags":["graphics","display-interface"]},{"location":"drm/rgb/#videos","title":"Videos","text":"<ul> <li>pico-rgb2hmi - video converter - Marcelo Lorenzati - Commodore Users Europe - 17th of Sep. 2022</li> <li>Image interfaces in LCD modules explanation - LVDS, RGB, MIPI, Vx1, eDP interfaces explanation</li> </ul>","tags":["graphics","display-interface"]},{"location":"drm/simpledrm/","title":"simpledrm","text":"","tags":["graphics","kms"]},{"location":"drm/simpledrm/#references","title":"References","text":"","tags":["graphics","kms"]},{"location":"drm/simpledrm/#videos","title":"Videos","text":"<ul> <li>Trading fbdev for DRM, No Returns Accepted - Geert Uytterhoeven, Glider bv</li> <li>openSUSE Conference 2022 - simpledrm - a kernel fbdev replacement</li> <li>Modern Graphics from Boot to Shutdown and Retiring fbdev</li> </ul>","tags":["graphics","kms"]},{"location":"drm/vga/","title":"VGA","text":"","tags":["graphics","display-interface"]},{"location":"drm/vga/#references","title":"References","text":"","tags":["graphics","display-interface"]},{"location":"drm/vga/#videos","title":"Videos","text":"<ul> <li>M14 - 3 - Basic Operation of a CRT Monitor</li> <li>M14 - 4 - VGA - Horizontal Synchronization</li> <li>M14 - 5 - VGA - Vertical Synchronization</li> <li>M14 - 6 - VGA - Pixel Clock Rate</li> <li>Nandland Go Board Project 9 - Introduction to VGA</li> </ul>","tags":["graphics","display-interface"]},{"location":"drm/vkms/","title":"VKMS","text":"","tags":["graphics","kms"]},{"location":"drm/vkms/#references","title":"References","text":"","tags":["graphics","kms"]},{"location":"drm/vkms/#videos","title":"Videos","text":"<ul> <li>XDC 2023 | October 18 | Status Update of the VKMS DRM driver | Ma\u00edra Canal and Melissa Wen</li> <li>XDC 2021 | Emulating Virtual Hardware in VKMS | Sumera Priyadarsini</li> <li>Rodrigo Siqueira &amp; Haneen Mohamed - VKMS</li> <li>XDC 2020 | VKMS improvements using IGT GPU Tools</li> </ul>","tags":["graphics","kms"]},{"location":"drm/wayland-protocol/","title":"EDITME","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/wayland-protocol/#references","title":"References","text":"","tags":["graphics","userspace-graphics"]},{"location":"drm/wayland-protocol/#videos","title":"Videos","text":"<ul> <li>Why YOU should write a Wayland compositor \u2013 Victoria Brekenfeld \u2013 HiP22 Berlin</li> <li>\"Write a single library to handle all input devices, it'll be easy\" they said...</li> </ul>","tags":["graphics","userspace-graphics"]},{"location":"pm/acpi-c-states/","title":"ACPI C-States","text":"","tags":["power-management","acpi"]},{"location":"pm/acpi-c-states/#references","title":"References","text":"","tags":["power-management","acpi"]},{"location":"pm/acpi-c-states/#videos","title":"Videos","text":"<ul> <li>Tuning Linux for Performance - I Wanna Go Fast! - Anthony Nocentino - PSConfEU 2023</li> <li>Tuning RT Kernel to Improve Schedule Performance with Intel Platform - Junxiao Chang, Intel</li> </ul>","tags":["power-management","acpi"]},{"location":"pm/acpi-c-states/#links","title":"Links","text":"<ul> <li>CPU idle power saving methods for real-time workloads on Linux Foundation Wiki</li> <li>Excerpt of Energy Efficient Servers: Blueprints for Data Center Optimization</li> </ul>","tags":["power-management","acpi"]},{"location":"pm/acpi-p-states/","title":"ACPI P-States","text":"","tags":["power-management","acpi"]},{"location":"pm/acpi-p-states/#references","title":"References","text":"","tags":["power-management","acpi"]},{"location":"pm/acpi-p-states/#videos","title":"Videos","text":"<ul> <li>07 - OSPM 2024 - Rafael J. Wysocki, Intel - Energy Models and Intel chips</li> <li>A New CPU Frequency Control Mechanism on Linux - Ray Huang, AMD</li> <li>Power Capping Linux - Srinivas Pandruvada, Intel</li> </ul>","tags":["power-management","acpi"]},{"location":"pm/acpi-s-states/","title":"ACPI S-States","text":"","tags":["power-management","acpi"]},{"location":"pm/acpi-s-states/#references","title":"References","text":"","tags":["power-management","acpi"]},{"location":"pm/acpi-s-states/#videos","title":"Videos","text":"<ul> <li>Arch4001 07 Power Transition 01 Intro 01 Intr</li> <li>Computer Architecture: CPU ACPI Power Management lecture 1</li> <li>Improving monitoring of power saving states - Mr Stanislaw Kardach (Google), Sven van Ashbrook</li> </ul>","tags":["power-management","acpi"]},{"location":"pm/cpufreq/","title":"cpufreq","text":"","tags":["power-management"]},{"location":"pm/cpufreq/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/cpufreq/#videos","title":"Videos","text":"<ul> <li>SUSE Labs Conference 2020 - The schedutil frequency governor: current status and performance</li> <li>Kernel modification: Adding Governors</li> <li>Advances in CPU Frequency Management</li> <li>LinuxDays 2018 - Frequency scaling governor for the Linux kernel - Giovanni Gherdovich</li> <li>LinuxDays 2017 - CPU Frequency Scaling in Linux - Giovanni Gherdovich</li> </ul>","tags":["power-management"]},{"location":"pm/cpuidle/","title":"cpuidle.md","text":"","tags":["power-management"]},{"location":"pm/cpuidle/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/cpuidle/#videos","title":"Videos","text":"<ul> <li>[ENG] Rafael J. Wysocki: \"Advances in CPU Idle Time Management in Linux\" / #LinuxPiter</li> </ul>","tags":["power-management"]},{"location":"pm/opp/","title":"OPP","text":"","tags":["power-management"]},{"location":"pm/opp/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/opp/#videos","title":"Videos","text":"<ul> <li>Power management techniques on embedded Linux (21:50)</li> </ul>","tags":["power-management"]},{"location":"pm/opp/#links","title":"Links","text":"<ul> <li>Operating Performance Points (OPP) Library in Linux Kernel Documentation.</li> </ul>","tags":["power-management"]},{"location":"pm/pm-domain/","title":"PM Domain (genpd)","text":"","tags":["power-management"]},{"location":"pm/pm-domain/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/pm-domain/#videos","title":"Videos","text":"<ul> <li>Kernel Recipes 2017 - Overview of Generic PM Domains (genpd) - Kevin Hilman</li> <li>The Case for an SoC Power Management Driver - Stephen Boyd, Google</li> <li>Adding Runtime Power Management Capabilities to Device Drivers - Shreeya Patel, Collabora</li> <li>SAN19-421 Training: Device power management for idle</li> </ul>","tags":["power-management"]},{"location":"pm/pm-domain/#links","title":"Links","text":"<ul> <li>Active state management of power domains</li> </ul>","tags":["power-management"]},{"location":"pm/pm-overview/","title":"Power Management Overview","text":"","tags":["power-management"]},{"location":"pm/pm-overview/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/pm-overview/#videos","title":"Videos","text":"<ul> <li>Kernel Recipes 2015 - Introduction to Kernel Power Management - by Kevin Hilman</li> <li>Power management on Linux: from the hardware to the kernel and userspace interfaces</li> <li>Power management techniques on embedded Linux</li> <li>YVR18-221:Linux Kernel Power Management Features - An Overview</li> <li>BKK19-TR02 - Linux Kernel Power Management - 101</li> <li>Michael Turquette: \"Introduction to Power Management\" [ENG]</li> </ul>","tags":["power-management"]},{"location":"pm/qos/","title":"Power Management QoS","text":"","tags":["power-management"]},{"location":"pm/qos/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/qos/#videos","title":"Videos","text":"<ul> <li>CPU Power Saving Methods for Real-time Workloads - Ramesh Thomas, Intel</li> </ul>","tags":["power-management"]},{"location":"pm/runtime-pm/","title":"Runtime Power Management","text":"","tags":["power-management"]},{"location":"pm/runtime-pm/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/runtime-pm/#videos","title":"Videos","text":"<ul> <li>Adding Runtime Power Management Capabilities to Device Drivers - Shreeya Patel, Collabora</li> <li>SAN19-421 Training: Device power management for idle</li> <li>BKK19-119 - Device power management and idle</li> <li>LPC2019 - Integration of PM-runtime with System-wide Power Management</li> <li>The Fall of the Legacy - Vaibhav Gupta, Open Source Contributor</li> </ul>","tags":["power-management"]},{"location":"pm/s0ix/","title":"S0ix","text":"","tags":["power-management"]},{"location":"pm/s0ix/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/s0ix/#videos","title":"Videos","text":"<ul> <li>FOSDEM 2025: Wake up, FreeBSD! Implementing Modern Standby with S0ix</li> <li>Host and Guest Suspend Under Xen - S3 and S0ix - Marek Marczykowski-G\u00f3recki, Invisible Things Lab</li> </ul>","tags":["power-management"]},{"location":"pm/s0ix/#links","title":"Links","text":"<ul> <li>(AMD) 18. Debugging AMD Zen systems</li> <li>(AMD) amd_s2idle.py</li> <li>(Intel) The S0ixSelftestTool</li> <li>(Intel) PCH S0 Low Power</li> <li>(Intel) Power Management Sub-state</li> <li>Prepare hardware for modern standby on the Windows documentation.</li> <li>Descriptions on the ChromeOS documentation</li> </ul>","tags":["power-management"]},{"location":"pm/s2idle-freeze/","title":"Suspend-to-idle (freeze)","text":"","tags":["power-management"]},{"location":"pm/s2idle-freeze/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/s2idle-freeze/#videos","title":"Videos","text":"<ul> <li>Evolution of Suspend-to-Idle Support in The Linux Kernel - Rafael Wysocki (LCA 2021 Online)</li> </ul>","tags":["power-management"]},{"location":"pm/s2ram-deep/","title":"Suspend-to-ram (deep)","text":"","tags":["power-management"]},{"location":"pm/s2ram-deep/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/s2ram-deep/#videos","title":"Videos","text":"<ul> <li>Unlocking the Potential of Suspend to RAM Using Linux in a Multi-Core, Multi-Firmware Automotive SoC - Gr\u00e9gory Clement, Bootlin</li> </ul>","tags":["power-management"]},{"location":"pm/s2ram-deep/#links","title":"Links","text":"<ul> <li>Suspend-to-RAM</li> </ul>","tags":["power-management"]},{"location":"pm/standby/","title":"Standby","text":"","tags":["power-management"]},{"location":"pm/standby/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/standby/#video","title":"Video","text":"<ul> <li>Is Linux Suspend ready for the next decade - Len Brown (02:31) :  \"...standby is sort of deprecated. I haven't seen standby on a machine for years.\"</li> </ul>","tags":["power-management"]},{"location":"pm/system-wide-suspend/","title":"System-wide suspend","text":"","tags":["power-management"]},{"location":"pm/system-wide-suspend/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/system-wide-suspend/#videos","title":"Videos","text":"<ul> <li>Is Linux Suspend ready for the next decade - Len Brown</li> <li>Evolution of Suspend-to-Idle Support in The Linux Kernel - Rafael Wysocki (LCA 2021 Online)</li> <li>BKK19-119 - Device power management and idle</li> </ul>","tags":["power-management"]},{"location":"pm/system-wide-suspend/#link","title":"Link","text":"<ul> <li>System Sleep States of the kernel documentation.</li> <li>Power management/Suspend and hibernate in Arch Wiki</li> <li>Suspend and hibernate in Gentoo Wiki.</li> <li><code>include/linux/pm.h</code> in Linux kernel.</li> <li>Device Power Management Basics</li> </ul>","tags":["power-management"]},{"location":"pm/thermal/","title":"Thermal subsystem","text":"","tags":["power-management"]},{"location":"pm/thermal/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/thermal/#videos","title":"Videos","text":"<ul> <li>Improvisation and Demonstration of Linux Thermal Framework for Multiple Temperature Sensors</li> <li>LVC20 110 Skin temperature management with hierarchical constraints</li> </ul>","tags":["power-management"]},{"location":"pm/thermald/","title":"thermald","text":"","tags":["power-management"]},{"location":"pm/thermald/#references","title":"References","text":"","tags":["power-management"]},{"location":"pm/thermald/#links","title":"Links","text":"<ul> <li>intel/thermal_daemon</li> </ul>","tags":["power-management"]},{"location":"workflows/applying-patches/","title":"Applying Patches","text":"<p>This is specifically for applying patches from a <code>.patch</code> or a <code>.mbox</code>, which is a less ideal way especially if patches has landed in some git trees.</p> <p>Easiest way is to use <code>b4</code>:</p> <pre><code>b4 shazam ${LINK_FROM_LORE_KERNEL_ORG}\n</code></pre> <p>For example:</p> <pre><code>b4 shazam 20250613-for-upstream-not-instantiate-spd5118-v2-1-cf456ed9b587@canonical.com\n</code></pre> <p>Another way would be downloading the <code>.mbox</code> from a mailing list thread and use <code>git am</code>.</p>","tags":["tooling"]},{"location":"workflows/applying-patches/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/applying-patches/#videos","title":"Videos","text":"","tags":["tooling"]},{"location":"workflows/applying-patches/#links","title":"Links","text":"<ol> <li>git-am - Apply a series of patches from a mailbox</li> <li>How to apply patches from the Linux Kernel Mailing List</li> <li>Applying Patches To The Linux Kernel (obsolete)</li> <li>am,shazam: retrieving and applying patches from B4 end-used doc.</li> </ol>","tags":["tooling"]},{"location":"workflows/b4/","title":"b4","text":"","tags":["tooling"]},{"location":"workflows/b4/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/b4/#videos","title":"Videos","text":"<ul> <li>Doing more with lore and b4 - Konstantin Ryabitsev (00:00 ~ 34:10)</li> <li>Submit a kernel patch with b4</li> <li>Submit a follow-up patch with b4</li> <li>Beginner Linux kernel maintainers toolbox - Krzysztof Kozlowski (31:23)</li> <li>Comparing and Contrasting Patman Vs B4 for Posting Patches - Doug Anderson, Google (27:58)</li> </ul>","tags":["tooling"]},{"location":"workflows/b4/#links","title":"Links","text":"<ol> <li>B4 end-user documentation</li> <li>Using lei, b4, and mutt to do kernel development</li> <li>Use b4 for kernel contributions</li> <li>Sending a kernel patch with b4 (part 1)</li> <li>End-to-end patch attestation with patatt and b4</li> </ol>","tags":["tooling"]},{"location":"workflows/backporting/","title":"Backporting","text":"<p>Backporting to Stable Branches is the shortest demo. Although it doesn't use kernel trees as examples, the concept is very applicable to kernel maintenance.</p> <p>For conflict resolution see Backporting and conflict resolution. Depending on how the targeted tree is maintained there could be different ways to do it. One possible way is finding all the dependent patches by recursively git-blaming the partent commit of the incoming commit, like what the kernel doc mentioned.</p> <p>This however might not work if commits in the targeted tree somehow deviates from the upstream too much. Good luck maintaining one then!</p>","tags":["tooling"]},{"location":"workflows/backporting/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/backporting/#videos","title":"Videos","text":"<ul> <li>Backporting Linux Kernel patches</li> <li>Shung-Hsi Yu: Backporting BPF: Techniques and Challenges</li> <li>Backporting to Stable Branches</li> <li>Michal Kube\u010dek: Backporting horror stories</li> <li>LAS16-101: Efficient kernel Backporting</li> <li>Contributing to the CentOS Stream Kernel - Prarit Bhargava and Don Zickus</li> </ul>","tags":["tooling"]},{"location":"workflows/backporting/#links","title":"Links","text":"<ul> <li>Backporting and conflict resolution</li> </ul>","tags":["tooling"]},{"location":"workflows/compiling-kernel-cross/","title":"Cross-Compiling a Kernel","text":"<p>There are just too many ways of doing it and they all should be topic of their own (e.g. Yocto, buildroot, roll-your-own) so I just post a simplest one.</p>","tags":["tooling"]},{"location":"workflows/compiling-kernel-cross/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/compiling-kernel-cross/#videos","title":"Videos","text":"<ul> <li>Embedded Linux from Scratch in 45 minutes, on RISC-V</li> </ul>","tags":["tooling"]},{"location":"workflows/compiling-kernel-native/","title":"Compiling a Kernel","text":"<p>For Debian-based systems there's a <code>bindeb-pkg</code> option that build the kernel into <code>.deb</code>, which is convenient for installing/uninstalling.</p>","tags":["tooling"]},{"location":"workflows/compiling-kernel-native/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/compiling-kernel-native/#videos","title":"Videos","text":"<ul> <li>Linux bootcamp: From casual Linux user to kernel hacker - Part 3</li> <li>Tim Beale: Linux Kernel Development for Newbies</li> <li>Embedded Linux from Scratch in 45 minutes, on RISC-V (Cross-compile example)</li> </ul>","tags":["tooling"]},{"location":"workflows/compiling-kernel-native/#links","title":"Links","text":"<ul> <li>https://javiercarrascocruz.github.io/kernel-build-tricks</li> </ul>","tags":["tooling"]},{"location":"workflows/development-process/","title":"Kernel Development Process","text":"","tags":["workflows"]},{"location":"workflows/development-process/#references","title":"References","text":"","tags":["workflows"]},{"location":"workflows/development-process/#videos","title":"Videos","text":"<ul> <li>Member training: Upstream Kernel Development (Part I)</li> <li>Member training: Upstream Kernel Development (Part II)</li> <li>Getting to Know the Linux Kernel: A Beginner's Guide - Kelsey Steele &amp; Nischala Yelchuri, Microsoft</li> <li>Getting Into Linux Kernel Development After 30 Years - Muhammad Usama Anjum, Collabora</li> <li>Mentorship Session: Maintainership &amp; Growing Influence in the Linux Kernel Community</li> <li>Beginner Linux kernel maintainers toolbox - Krzysztof Kozlowski</li> </ul>","tags":["workflows"]},{"location":"workflows/git-basics/","title":"git basics","text":"","tags":["tooling","git"]},{"location":"workflows/git-basics/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-basics/#videos","title":"Videos","text":"<ul> <li>Git it right! [Workshop] - Git Merge 2022</li> <li>So You Think You Know Git - FOSDEM 2024</li> <li>So You Think You Know Git Part 2 - DevWorld 2024</li> <li>Advanced Git Magic - Pauline Vos - Full Stack Europe 2022</li> <li>CSESoc | Git Gud</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-bisect/","title":"git bisect","text":"","tags":["tooling","git"]},{"location":"workflows/git-bisect/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-bisect/#videos","title":"Videos","text":"<ul> <li>Git driven debugging - Git Merge 2022</li> <li>Debugging with Git Bisect</li> <li>Using git bisect to pinpoint bugs in your commit history</li> <li>Howto: git bisect PPC64 PS3 Linux kernel USB regression!</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-bisect/#links","title":"Links","text":"<ul> <li>Git - git-bisect Documentation</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-cherry-pick/","title":"git cherry-pick","text":"","tags":["tooling","git"]},{"location":"workflows/git-cherry-pick/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-cherry-pick/#videos","title":"Videos","text":"<ul> <li>Backporting to Stable Branches</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-cherry-pick/#links","title":"Links","text":"<ul> <li>Git Cherry Pick | Atlassian Git Tutorial</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-interrogators/","title":"git interrogators","text":"","tags":["tooling","git"]},{"location":"workflows/git-interrogators/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-interrogators/#videos","title":"Videos","text":"<ul> <li>So You Think You Know Git - FOSDEM 2024</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-interrogators/#links","title":"Links","text":"<ul> <li>Backporting and conflict resolution</li> <li>Advanced Git log</li> <li>Git - git-cherry-pick Documentation</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-rebase-interactive/","title":"git rebase (interactive)","text":"","tags":["tooling","git"]},{"location":"workflows/git-rebase-interactive/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-rebase-interactive/#videos","title":"Videos","text":"<ul> <li>Git Rebase Interactive :: A Practical Example</li> <li>Inserting a Commit into a Patch Series</li> <li>Reordering Commits in Git</li> <li>Squashing Git commits with Interactive Rebase</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-rebase-interactive/#links","title":"Links","text":"<ul> <li>git rebase | Atlassian Git Tutorial</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-rebase/","title":"git rebase","text":"","tags":["tooling","git"]},{"location":"workflows/git-rebase/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-rebase/#videos","title":"Videos","text":"<ul> <li>RubyConf 2019 - Story telling with Git rebase by Elle Meredith</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-rebase/#links","title":"Links","text":"<ul> <li>git rebase | Atlassian Git Tutorial</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-send-email/","title":"git send-email","text":"","tags":["tooling"]},{"location":"workflows/git-send-email/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/git-send-email/#videos","title":"Videos","text":"<ul> <li>Comparing and Contrasting Patman Vs B4 for Posting Patches - Doug Anderson, Google (01:30)</li> </ul>","tags":["tooling"]},{"location":"workflows/git-send-email/#link","title":"Link","text":"<ul> <li>Submitting Your First Patch to the Linux Kernel and Responding to Feedback</li> </ul>","tags":["tooling"]},{"location":"workflows/git-worktree/","title":"git worktree","text":"","tags":["tooling","git"]},{"location":"workflows/git-worktree/#references","title":"References","text":"","tags":["tooling","git"]},{"location":"workflows/git-worktree/#videos","title":"Videos","text":"<ul> <li>How to use Git Worktree</li> <li>How to Use Git Worktree | Checkout Multiple Git Branches at Once</li> </ul>","tags":["tooling","git"]},{"location":"workflows/git-worktree/#links","title":"Links","text":"<ul> <li>Git - git-worktree Documentation</li> </ul>","tags":["tooling","git"]},{"location":"workflows/kbuild/","title":"KBuild","text":"","tags":["tooling"]},{"location":"workflows/kbuild/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/kbuild/#videos","title":"Videos","text":"<ul> <li>A dive into kbuild - Cao jin, Fujitsu</li> <li>Introduction to Kernel Modules and Kbuild</li> </ul>","tags":["tooling"]},{"location":"workflows/kbuild/#links","title":"Links","text":"","tags":["tooling"]},{"location":"workflows/kconfig/","title":"Kconfig","text":"","tags":["tooling"]},{"location":"workflows/kconfig/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/kconfig/#videos","title":"Videos","text":"<ul> <li>Introduction to Kernel Modules and Kbuild</li> <li>Managing Linux Kernel Configurations with Config Fragments - Darren Hart, VMware</li> <li>Krepair: Automatically Repairing .config Files to Cover Patches - Paul Gazzillo &amp; Necip Yildiran</li> </ul>","tags":["tooling"]},{"location":"workflows/kconfig/#links","title":"Links","text":"","tags":["tooling"]},{"location":"workflows/kernel-binaries/","title":"Kernel Binaries","text":"<p>This ideally should contains common artifacts of a kernel compilation (e.g. kernel image, vmlinux). Apparently this depends heavily on the target architectures and enumerating all them feels impossible, so I only put x86-64 ones here.</p>","tags":["tooling"]},{"location":"workflows/kernel-binaries/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/kernel-binaries/#videos","title":"Videos","text":"<ul> <li>Linker scripts in the Linux Kernel, Kernel Image structure, and x86 boot sector debugging</li> </ul>","tags":["tooling"]},{"location":"workflows/kernel-binaries/#links","title":"Links","text":"<ul> <li>Process of the Linux kernel building</li> </ul>","tags":["tooling"]},{"location":"workflows/kernel-coding-patterns/","title":"Kernel Coding Patterns","text":"","tags":["workflows"]},{"location":"workflows/kernel-coding-patterns/#references","title":"References","text":"","tags":["workflows"]},{"location":"workflows/kernel-coding-patterns/#videos","title":"Videos","text":"<ul> <li>Kernel Coding the Upstream Way - Tim Bird, Sony</li> <li>Kernel Recipes 2019 - Hunting and fixing bugs all over the Linux kernel</li> <li>Progress On Bounds Checking in C and the Linux Kernel - Kees Cook, Google &amp; Gustavo A.R. Silva</li> </ul>","tags":["workflows"]},{"location":"workflows/kernel-release-model/","title":"Kernel Release Model","text":"","tags":["workflows"]},{"location":"workflows/kernel-release-model/#references","title":"References","text":"","tags":["workflows"]},{"location":"workflows/kernel-release-model/#videos","title":"Videos","text":"<ul> <li>Kernel Recipes 2017 - Linux Kernel release model - Greg KH</li> <li>Day-to-day Testing of Linux 'Next' Kernel Branch - My Story - Marek Szyprowski, Samsung Electronics</li> <li>Kernel Recipes 2016 - From \u2018git tag\u2019 to the front page - Konstantin Ryabitsev</li> <li>An engineer's guide to Linux Kernel upgrades - Ignat Korchagin - NDC TechTown 2023</li> </ul>","tags":["workflows"]},{"location":"workflows/lei/","title":"lei","text":"","tags":["tooling"]},{"location":"workflows/lei/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/lei/#videos","title":"Videos","text":"<ol> <li>Beginner Linux kernel maintainers toolbox - Krzysztof Kozlowski2</li> <li>Doing more with lore and b4 - Konstantin Ryabitsev (34:10 ~ FIN)</li> </ol>","tags":["tooling"]},{"location":"workflows/lei/#links","title":"Links","text":"<ol> <li>Using lei, b4, and mutt to do kernel development</li> <li>lore+lei: part 1, getting started</li> <li>lore+lei: part 2, now with IMAP</li> <li><code>lei-q(1)</code></li> </ol>","tags":["tooling"]},{"location":"workflows/patman/","title":"patman","text":"","tags":["workflows"]},{"location":"workflows/patman/#references","title":"References","text":"","tags":["workflows"]},{"location":"workflows/patman/#videos","title":"Videos","text":"<ul> <li>Comparing and Contrasting Patman Vs B4 for Posting Patches - Doug Anderson, Google (03:52)</li> </ul>","tags":["workflows"]},{"location":"workflows/stable-releases/","title":"Stable Releases","text":"","tags":["workflows"]},{"location":"workflows/stable-releases/#references","title":"References","text":"","tags":["workflows"]},{"location":"workflows/stable-releases/#videos","title":"Videos","text":"<ul> <li>Kernel Recipes 2017 - Linux Kernel release model - Greg KH</li> <li>Kernel Recipes 2015 - Linux Stable Release process - by Greg KH</li> </ul>","tags":["workflows"]},{"location":"workflows/upstreaming-process/","title":"Upstreaming Process","text":"","tags":["workflows"]},{"location":"workflows/upstreaming-process/#references","title":"References","text":"","tags":["workflows"]},{"location":"workflows/upstreaming-process/#videos","title":"Videos","text":"<ul> <li>Submitting Your First Patch to the Linux Kernel and Responding to Feedback</li> <li>Getting to Know the Linux Kernel: A Beginner's Guide - Kelsey Steele &amp; Nischala Yelchuri, Microsoft</li> <li>Baby Steps to Kernel Hacking - Sayli Yogesh Karnik, Credit Suisse</li> <li>Tutorial: From an Idea to a Patch in the Linux Mainline - Marta Rybczynska, Various Projects</li> </ul>","tags":["workflows"]},{"location":"workflows/xapian-query-syntax/","title":"Xapian Query Syntax","text":"","tags":["tooling"]},{"location":"workflows/xapian-query-syntax/#references","title":"References","text":"","tags":["tooling"]},{"location":"workflows/xapian-query-syntax/#videos","title":"Videos","text":"","tags":["tooling"]},{"location":"workflows/xapian-query-syntax/#links","title":"Links","text":"<ol> <li>public-inbox help from any mailing list archive</li> <li>Getting Started with Xapian</li> <li>Xapian::QueryParser Syntax on the official documentation of Xapian</li> </ol>","tags":["tooling"]}]}